// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RH_DELIRIO.Data;

namespace RH_DELIRIO.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220519140911_Banco")]
    partial class Banco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Admissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_admissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Admissoes");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Bancos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("agencia_banco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("conta_banco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("descricao_banco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("numero_banco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Cargos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("abreviacao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("diasexp")
                        .HasColumnType("int");

                    b.Property<int>("diasprorr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Divisao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("numero_divisao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Divisoes");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.EnderecoFuncionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("complemento")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("numero")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("rua")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("EnderecosFuncionarios");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.EnderecoLojas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LojasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("complemento")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("numero")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("rua")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LojasId");

                    b.ToTable("EnderecosLojas");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Eventos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_evento")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao_evento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("numero_evento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Familiares", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("nasc_filho")
                        .HasColumnType("datetime2");

                    b.Property<string>("nome_filho")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("nome_mae")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("nome_pai")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Familiares");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TipoEstadoCivil")
                        .HasColumnType("int");

                    b.Property<int>("TipoFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("TipoGerencial")
                        .HasColumnType("int");

                    b.Property<int>("TipoNacionalidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoSexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("afastamento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<string>("banco_pis")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("carteira_trabalho")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("causa_afastamento")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("cidade_nascimento")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("desconto_sindicato")
                        .HasColumnType("bit");

                    b.Property<DateTime>("emissao_ct")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("expedicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idfuncionario")
                        .HasColumnType("int");

                    b.Property<DateTime>("nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("naturalidade")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("nome_guerra")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("observacoes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("orgao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("pis_pasep")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("registro_contador")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("rg")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("saida")
                        .HasColumnType("datetime2");

                    b.Property<string>("secao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("serie_ct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("tamanho_calca")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("tamanho_camisa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("titulo_eleitor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("zona")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HistoricoFerias", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("abonoferias")
                        .HasColumnType("int");

                    b.Property<DateTime>("datafim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datagozo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datainicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("diasgozo")
                        .HasColumnType("int");

                    b.Property<int>("diasvendidos")
                        .HasColumnType("int");

                    b.Property<int>("valorferias")
                        .HasColumnType("int");

                    b.Property<int>("valorvendido")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("HistoricosFerias");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HistoricoFuncionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("HistoricosFuncionarios");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HistoricoSalario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_mod_salario")
                        .HasColumnType("datetime2");

                    b.Property<int>("salario_atual")
                        .HasColumnType("int");

                    b.Property<int>("salario_inicial")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("HistoricosSalarios");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HorariosAtuais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_entrada_abertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_entrada_inter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_entrada_noite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_saida_abertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_saida_inter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_saida_noite")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("HorariosAtuais");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HorariosOriginais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_entrada_abertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_entrada_inter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_entrada_noite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_saida_abertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_saida_inter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_saida_noite")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("HorariosOriginais");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Instrucao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Instrucoes");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Lojas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cnpj")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("cod_amil")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("descricaoAnterior")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("descricaoAtual")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("descricaoOriginal")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("inscricao_estadual")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("razao_social")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("sigla")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Lojas");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.MotivosAfastamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_afastamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("MotivosAfastamentos");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.PlanoDeSaude", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("plano")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("PlanosDeSaude");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Salarios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cargo_atual")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("cargo_original")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("data_modificao")
                        .HasColumnType("datetime2");

                    b.Property<int>("salario_atual")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<int>("salario_original")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("Salarios");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.TarifasDeOnibus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("data_modificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("tarifa_atual")
                        .HasColumnType("int");

                    b.Property<int>("tarifa_original")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("TarifasDeOnibus");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.UnidadeDeFederacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("sigla")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("UnidadeDeFederacao");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Admissao", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("Admissao")
                        .HasForeignKey("RH_DELIRIO.Models.Admissao", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Bancos", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("Banco")
                        .HasForeignKey("RH_DELIRIO.Models.Bancos", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Cargos", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("Cargos")
                        .HasForeignKey("RH_DELIRIO.Models.Cargos", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Divisao", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("Divisao")
                        .HasForeignKey("RH_DELIRIO.Models.Divisao", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.EnderecoFuncionario", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("EnderecoFuncionario")
                        .HasForeignKey("RH_DELIRIO.Models.EnderecoFuncionario", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.EnderecoLojas", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Lojas", "lojas")
                        .WithMany()
                        .HasForeignKey("LojasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("lojas");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Eventos", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("Evento")
                        .HasForeignKey("RH_DELIRIO.Models.Eventos", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Familiares", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("Familiar")
                        .HasForeignKey("RH_DELIRIO.Models.Familiares", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HistoricoFerias", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("HistoricoFerias")
                        .HasForeignKey("RH_DELIRIO.Models.HistoricoFerias", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HistoricoFuncionario", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("HistoricoFuncionario")
                        .HasForeignKey("RH_DELIRIO.Models.HistoricoFuncionario", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HistoricoSalario", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("HistoricoSalario")
                        .HasForeignKey("RH_DELIRIO.Models.HistoricoSalario", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HorariosAtuais", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("HorariosAtuais")
                        .HasForeignKey("RH_DELIRIO.Models.HorariosAtuais", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.HorariosOriginais", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("HorariosOriginais")
                        .HasForeignKey("RH_DELIRIO.Models.HorariosOriginais", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Instrucao", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("Instrucao")
                        .HasForeignKey("RH_DELIRIO.Models.Instrucao", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Lojas", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("Lojas")
                        .HasForeignKey("RH_DELIRIO.Models.Lojas", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.MotivosAfastamento", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("MotivosAfastamento")
                        .HasForeignKey("RH_DELIRIO.Models.MotivosAfastamento", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.PlanoDeSaude", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("PlanoDeSaude")
                        .HasForeignKey("RH_DELIRIO.Models.PlanoDeSaude", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Salarios", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("Salarios")
                        .HasForeignKey("RH_DELIRIO.Models.Salarios", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.TarifasDeOnibus", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("TarifasDeOnibus")
                        .HasForeignKey("RH_DELIRIO.Models.TarifasDeOnibus", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.UnidadeDeFederacao", b =>
                {
                    b.HasOne("RH_DELIRIO.Models.Funcionario", "funcionario")
                        .WithOne("UnidadeDeFederacao")
                        .HasForeignKey("RH_DELIRIO.Models.UnidadeDeFederacao", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("RH_DELIRIO.Models.Funcionario", b =>
                {
                    b.Navigation("Admissao");

                    b.Navigation("Banco");

                    b.Navigation("Cargos");

                    b.Navigation("Divisao");

                    b.Navigation("EnderecoFuncionario");

                    b.Navigation("Evento");

                    b.Navigation("Familiar");

                    b.Navigation("HistoricoFerias");

                    b.Navigation("HistoricoFuncionario");

                    b.Navigation("HistoricoSalario");

                    b.Navigation("HorariosAtuais");

                    b.Navigation("HorariosOriginais");

                    b.Navigation("Instrucao");

                    b.Navigation("Lojas");

                    b.Navigation("MotivosAfastamento");

                    b.Navigation("PlanoDeSaude");

                    b.Navigation("Salarios");

                    b.Navigation("TarifasDeOnibus");

                    b.Navigation("UnidadeDeFederacao");
                });
#pragma warning restore 612, 618
        }
    }
}
